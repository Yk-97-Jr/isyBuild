openapi: 3.0.3
info:
  title: IsyBuild API
  version: 1.0.0
  description: API documentation for IsyBuild
paths:
  /admin-staff/:
    get:
      operationId: admin_staff_retrieve
      description: Retrieve a list of all admin staff users with pagination.
      summary: List all admin staff
      parameters:
      - in: query
        name: page
        schema:
          type: integer
        description: Page number of the results to fetch
      - in: query
        name: page_size
        schema:
          type: integer
        description: Number of results per page
      tags:
      - Admin Staff Management
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Paginated'
          description: ''
  /admin-staff/{admin_user_id}/:
    get:
      operationId: admin_staff_retrieve_2
      description: Fetches detailed information about an admin staff member by their
        unique identifier.
      summary: Retrieve Admin Staff Details
      parameters:
      - in: path
        name: admin_user_id
        schema:
          type: integer
        required: true
      tags:
      - Admin Staff Management
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminStaff'
          description: ''
  /admin-staff/create/:
    post:
      operationId: admin_staff_create_create
      description: Create a new admin staff member.
      tags:
      - Admin Staff Management
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminStaffCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AdminStaffCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AdminStaffCreate'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminStaff'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
                description: Unspecified response body
          description: ''
  /admin-staff/update/{admin_user_id}/:
    patch:
      operationId: admin_staff_update_partial_update
      description: Updates information for an existing admin staff member.
      summary: Update Admin Staff Member
      parameters:
      - in: path
        name: admin_user_id
        schema:
          type: integer
        required: true
      tags:
      - Admin Staff Management
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAdminStaffUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAdminStaffUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAdminStaffUpdate'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminStaff'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
                description: Unspecified response body
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
                description: Unspecified response body
          description: ''
  /admin-users/delete/{admin_user_id}/:
    delete:
      operationId: admin_users_delete_destroy
      description: Deletes an admin user by ID. Requires administrative privileges.
      summary: Delete Admin User
      parameters:
      - in: path
        name: admin_user_id
        schema:
          type: integer
        required: true
      tags:
      - Admin Staff Management
      security:
      - jwtAuth: []
      responses:
        '204':
          content:
            application/json:
              schema:
                description: User deleted successfully.
          description: ''
        '404':
          content:
            application/json:
              schema:
                description: User not found.
          description: ''
        '403':
          content:
            application/json:
              schema:
                description: Permission denied.
          description: ''
  /clients/:
    get:
      operationId: clients_retrieve
      description: Retrieve a list of all client with pagination.
      summary: List all Client
      parameters:
      - in: query
        name: page
        schema:
          type: integer
        description: Page number of the results to fetch
      - in: query
        name: page_size
        schema:
          type: integer
        description: Number of results per page
      tags:
      - Client Management
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Paginated'
          description: ''
  /clients/{client_id}/:
    get:
      operationId: clients_retrieve_2
      description: Fetches detailed information about an client member by their unique
        identifier.
      summary: Retrieve client Details
      parameters:
      - in: path
        name: client_id
        schema:
          type: integer
        required: true
      tags:
      - Client Management
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Client'
          description: ''
  /clients/{client_id}/contacts/:
    get:
      operationId: clients_contacts_retrieve
      description: Retrieve a list of all contacts for a specific client with pagination.
      summary: List all Contacts for a Client
      parameters:
      - in: path
        name: client_id
        schema:
          type: integer
        required: true
      - in: query
        name: page
        schema:
          type: integer
        description: Page number of the results to fetch
      - in: query
        name: page_size
        schema:
          type: integer
        description: Number of results per page
      tags:
      - Contact Management
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Paginated'
          description: ''
  /clients/{client_id}/contacts/create/:
    post:
      operationId: clients_contacts_create_create
      description: Create a new contact for a specific client.
      parameters:
      - in: path
        name: client_id
        schema:
          type: integer
        required: true
      tags:
      - Contact Management
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContactCreateUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ContactCreateUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ContactCreateUpdate'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
                description: Unspecified response body
          description: ''
  /clients/create/:
    post:
      operationId: clients_create_create
      description: Create a new client .
      tags:
      - Client Management
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClientCreateUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ClientCreateUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ClientCreateUpdate'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Client'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
                description: Unspecified response body
          description: ''
  /clients/delete/{client_id}/:
    delete:
      operationId: clients_delete_destroy
      description: Deletes an client by ID. Requires administrative privileges.
      summary: Delete Client
      parameters:
      - in: path
        name: client_id
        schema:
          type: integer
        required: true
      tags:
      - Client Management
      security:
      - jwtAuth: []
      responses:
        '204':
          content:
            application/json:
              schema:
                description: client deleted successfully.
          description: ''
        '404':
          content:
            application/json:
              schema:
                description: client not found.
          description: ''
        '403':
          content:
            application/json:
              schema:
                description: Permission denied.
          description: ''
  /clients/update/{client_id}/:
    put:
      operationId: clients_update_update
      description: Updates information for an existing client .
      summary: Update Client Member
      parameters:
      - in: path
        name: client_id
        schema:
          type: integer
        required: true
      tags:
      - Client Management
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClientCreateUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ClientCreateUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ClientCreateUpdate'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Client'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
                description: Unspecified response body
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
                description: Unspecified response body
          description: ''
  /contact-us/send-email/:
    post:
      operationId: contact_us_send_email_create
      description: This endpoint allows users to send a contact us email with their
        details.
      summary: Send Contact Us Email
      tags:
      - contact-us
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContactUsEmail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ContactUsEmail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ContactUsEmail'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: Email sent successfully.
        '400':
          description: Invalid data or email not sent.
  /contacts/{contact_id}/:
    get:
      operationId: contacts_retrieve
      description: Fetches detailed information about an contact  by their unique
        identifier.
      summary: Retrieve contact Details
      parameters:
      - in: path
        name: contact_id
        schema:
          type: integer
        required: true
      tags:
      - Contact Management
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact'
          description: ''
  /contacts/{contact_id}/delete/:
    delete:
      operationId: contacts_delete_destroy
      description: Deletes an contact by ID. Requires administrative privileges.
      summary: Delete Contact
      parameters:
      - in: path
        name: contact_id
        schema:
          type: integer
        required: true
      tags:
      - Contact Management
      security:
      - jwtAuth: []
      responses:
        '204':
          content:
            application/json:
              schema:
                description: contact deleted successfully.
          description: ''
        '404':
          content:
            application/json:
              schema:
                description: contact not found.
          description: ''
        '403':
          content:
            application/json:
              schema:
                description: Permission denied.
          description: ''
  /contacts/{contact_id}/phone-numbers/:
    get:
      operationId: contacts_phone_numbers_retrieve
      description: Retrieve a list of all phone numbers for a specific contact with
        pagination.
      summary: List all Phone Number for a contact
      parameters:
      - in: path
        name: contact_id
        schema:
          type: integer
        required: true
      - in: query
        name: page
        schema:
          type: integer
        description: Page number of the results to fetch
      - in: query
        name: page_size
        schema:
          type: integer
        description: Number of results per page
      tags:
      - Contact Management
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Paginated'
          description: ''
  /contacts/{contact_id}/phone-numbers/create/:
    post:
      operationId: contacts_phone_numbers_create_create
      description: Create a new phone number for a specific client.
      parameters:
      - in: path
        name: contact_id
        schema:
          type: integer
        required: true
      tags:
      - Contact Management
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PhoneNumberCreateUpdate'
            examples:
              CreatePhoneNumber:
                value:
                  number: '1234567890'
                  type: work
                summary: Create Phone Number
                description: Create a phone number with a type field restricted to
                  predefined choices.
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PhoneNumberCreateUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PhoneNumberCreateUpdate'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PhoneNumber'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
                description: Unspecified response body
          description: ''
  /contacts/{contact_id}/update/:
    put:
      operationId: contacts_update_update
      description: Updates information for an existing Contact .
      summary: Update Contact details
      parameters:
      - in: path
        name: contact_id
        schema:
          type: integer
        required: true
      tags:
      - Contact Management
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContactCreateUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ContactCreateUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ContactCreateUpdate'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
                description: Unspecified response body
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
                description: Unspecified response body
          description: ''
  /login/:
    post:
      operationId: login_create
      description: Login endpoint to obtain access and refresh tokens
      tags:
      - Authentication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
              examples:
                Success:
                  value:
                    refresh: string
                    access: string
                  description: Successfully obtained tokens
          description: ''
        '401':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
              examples:
                Unauthorized:
                  value:
                    detail: No active account found with the given credentials
                  description: Invalid credentials
          description: ''
  /logout/:
    post:
      operationId: logout_create
      description: Logout endpoint to blacklist refresh token
      tags:
      - Authentication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      security:
      - jwtAuth: []
      responses:
        '205':
          description: No response body
        '400':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
              examples:
                BadRequest:
                  value:
                    detail: Invalid token
                  summary: Bad Request
                  description: Invalid request or token
          description: ''
  /password-confirm/:
    post:
      operationId: password_confirm_create
      description: Set a new password using the provided token and UID. The user must
        submit the token received by email, along with their user ID and the new password.
      tags:
      - Password Management
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetNewPassword'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SetNewPassword'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SetNewPassword'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Password has been successfully reset.
          description: ''
        '400':
          content:
            application/json:
              schema:
                description: Invalid input data, such as an invalid token or password
                  criteria not met.
          description: ''
        '404':
          content:
            application/json:
              schema:
                description: Invalid UID or token.
          description: ''
  /password-reset/:
    post:
      operationId: password_reset_create
      description: Request a password reset link with redirect URI. The user will
        receive an email with a link to reset their password if the email is registered
        in the system.
      tags:
      - Password Management
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordResetRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordResetRequest'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Password reset link sent successfully if email is valid.
          description: ''
        '400':
          content:
            application/json:
              schema:
                description: Invalid input data.
          description: ''
        '404':
          content:
            application/json:
              schema:
                description: Email not found in the system.
          description: ''
  /phone-numbers/{phone_number_id}/:
    get:
      operationId: phone_numbers_retrieve
      description: Fetches detailed information about an Phone Number  by their unique
        identifier.
      summary: Retrieve Phone Number Details
      parameters:
      - in: path
        name: phone_number_id
        schema:
          type: integer
        required: true
      tags:
      - Contact Management
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PhoneNumber'
          description: ''
  /phone-numbers/{phone_number_id}/delete/:
    delete:
      operationId: phone_numbers_delete_destroy
      description: Deletes an phone number by ID. Requires administrative privileges.
      summary: Delete Phone number
      parameters:
      - in: path
        name: phone_number_id
        schema:
          type: integer
        required: true
      tags:
      - Contact Management
      security:
      - jwtAuth: []
      responses:
        '204':
          content:
            application/json:
              schema:
                description: phone number deleted successfully.
          description: ''
        '404':
          content:
            application/json:
              schema:
                description: phone number not found.
          description: ''
        '403':
          content:
            application/json:
              schema:
                description: Permission denied.
          description: ''
  /phone-numbers/{phone_number_id}/update/:
    put:
      operationId: phone_numbers_update_update
      description: Updates information for an existing Phone Number .
      summary: Update Phone Number details
      parameters:
      - in: path
        name: phone_number_id
        schema:
          type: integer
        required: true
      tags:
      - Contact Management
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PhoneNumberCreateUpdate'
            examples:
              CreatePhoneNumber:
                value:
                  number: '1234567890'
                  type: work
                summary: Create Phone Number
                description: Create a phone number with a type field restricted to
                  predefined choices.
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PhoneNumberCreateUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PhoneNumberCreateUpdate'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PhoneNumber'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
                description: Unspecified response body
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
                description: Unspecified response body
          description: ''
  /set-password/:
    post:
      operationId: set_password_create
      description: Allows users to set a new password using a provided UID and token.
        This endpoint is part of the password reset flow, typically accessed through
        a link sent to the user's email.
      tags:
      - Password Management
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Setassword'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Setassword'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Setassword'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Password has been successfully set.
          description: ''
        '400':
          content:
            application/json:
              schema:
                description: Request contains invalid data or validation errors.
          description: ''
  /token_refresh/:
    post:
      operationId: token_refresh_create
      description: Endpoint to refresh access token
      tags:
      - Authentication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
              examples:
                Success:
                  value:
                    access: string
                  description: Successfully refreshed token
          description: ''
        '401':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
              examples:
                Unauthorized:
                  value:
                    detail: Token is invalid or expired
                  description: Invalid or expired token
          description: ''
  /user/change-password/:
    post:
      operationId: user_change_password_create
      description: Allows authenticated users to change their password by providing
        the old and new passwords.
      summary: Change Password
      tags:
      - Authentication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserChangePassword'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserChangePassword'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserChangePassword'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
                description: Unspecified response body
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
                description: Unspecified response body
          description: ''
  /user/confirm-email-change/:
    post:
      operationId: user_confirm_email_change_create
      description: Processes a request to confirm an email change through a provided
        JWT token. The token should be sent as part of the request data.
      summary: Confirm Email Change
      tags:
      - Authentication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserEmailChangeConfirm'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserEmailChangeConfirm'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserEmailChangeConfirm'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Email updated successfully.
                  new_email:
                    type: string
                    example: user@example.com
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Invalid token or other specific error message.
          description: ''
  /user/profile/:
    get:
      operationId: user_profile_retrieve
      description: Returns the user's profile details.
      summary: Get User Profile
      tags:
      - Authentication
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /user/request-change-email/:
    post:
      operationId: user_request_change_email_create
      description: Allows authenticated users to request an email change. This sends
        a confirmation link to the new email address.
      summary: Request Email Change
      tags:
      - Authentication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserEmailChangeRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserEmailChangeRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserEmailChangeRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Confirmation link sent to the new email.
          description: ''
        '400':
          content:
            application/json:
              schema:
                description: Invalid data provided or email already in use.
          description: ''
  /user/update/:
    patch:
      operationId: user_update_partial_update
      description: Updates the user's profile details.
      summary: Update User Profile
      tags:
      - Authentication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserProfileUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserProfileUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserProfileUpdate'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
                description: Unspecified response body
          description: ''
components:
  schemas:
    Address:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        street_number:
          type: string
          title: Numéro de la rue
          maxLength: 10
        street_name:
          type: string
          title: Nom de la rue
          maxLength: 255
        postal_code:
          type: string
          title: Code postal
          maxLength: 5
        city:
          type: string
          title: Ville
          maxLength: 100
        department:
          type: string
          nullable: true
          title: Département
          maxLength: 100
        region:
          type: string
          nullable: true
          title: Région
          maxLength: 100
        country:
          type: string
          title: Pays
          maxLength: 100
        created_by:
          allOf:
          - $ref: '#/components/schemas/CreatedBy'
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - city
      - created_at
      - created_by
      - id
      - postal_code
      - street_name
      - street_number
      - updated_at
    AddressCreate:
      type: object
      properties:
        street_number:
          type: string
          title: Numéro de la rue
          maxLength: 10
        street_name:
          type: string
          title: Nom de la rue
          maxLength: 255
        postal_code:
          type: string
          title: Code postal
          maxLength: 5
        city:
          type: string
          title: Ville
          maxLength: 100
        department:
          type: string
          nullable: true
          title: Département
          maxLength: 100
        region:
          type: string
          nullable: true
          title: Région
          maxLength: 100
        country:
          type: string
          title: Pays
          maxLength: 100
      required:
      - city
      - postal_code
      - street_name
      - street_number
    AdminStaff:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        created_by:
          allOf:
          - $ref: '#/components/schemas/CreatedBy'
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - created_by
      - id
      - updated_at
      - user
    AdminStaffCreate:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/UserCreate'
      required:
      - user
    Client:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Nom de l'entreprise
          maxLength: 255
        siren_number:
          type: string
          title: Numéro SIREN
          maxLength: 9
        address:
          $ref: '#/components/schemas/Address'
        contact_email:
          type: string
          format: email
          title: Email de contact
          maxLength: 254
        phone_number:
          type: string
          title: Numéro de téléphone
          maxLength: 20
        is_active:
          type: boolean
          title: Est actif
        created_by:
          allOf:
          - $ref: '#/components/schemas/CreatedBy'
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - address
      - contact_email
      - created_at
      - created_by
      - id
      - name
      - phone_number
      - siren_number
      - updated_at
    ClientCreateUpdate:
      type: object
      properties:
        name:
          type: string
          title: Nom de l'entreprise
          maxLength: 255
        siren_number:
          type: string
          title: Numéro SIREN
          maxLength: 9
        address:
          $ref: '#/components/schemas/AddressCreate'
        contact_email:
          type: string
          format: email
          title: Email de contact
          maxLength: 254
        phone_number:
          type: string
          title: Numéro de téléphone
          maxLength: 20
        is_active:
          type: boolean
          title: Est actif
      required:
      - address
      - contact_email
      - name
      - phone_number
      - siren_number
    Contact:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        first_name:
          type: string
          title: Prénom
          maxLength: 100
        last_name:
          type: string
          title: Nom
          maxLength: 100
        email:
          type: string
          format: email
          maxLength: 254
        phone_numbers:
          type: array
          items:
            $ref: '#/components/schemas/PhoneNumber'
          readOnly: true
        created_by:
          allOf:
          - $ref: '#/components/schemas/CreatedBy'
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - created_by
      - email
      - first_name
      - id
      - last_name
      - phone_numbers
      - updated_at
    ContactCreateUpdate:
      type: object
      properties:
        first_name:
          type: string
          title: Prénom
          maxLength: 100
        last_name:
          type: string
          title: Nom
          maxLength: 100
        email:
          type: string
          format: email
          maxLength: 254
      required:
      - email
      - first_name
      - last_name
    ContactUsEmail:
      type: object
      properties:
        nom:
          type: string
          maxLength: 100
        prenom:
          type: string
          maxLength: 100
        telephone:
          type: string
          maxLength: 15
        email:
          type: string
          format: email
        fonction:
          type: string
          maxLength: 100
        entreprise:
          type: string
          maxLength: 100
        message:
          type: string
      required:
      - email
      - entreprise
      - fonction
      - nom
      - prenom
      - telephone
    CreatedBy:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        first_name:
          type: string
          maxLength: 30
        last_name:
          type: string
          maxLength: 30
      required:
      - email
      - id
    Paginated:
      type: object
      properties:
        count:
          type: integer
        next:
          type: string
          format: uri
          nullable: true
        previous:
          type: string
          format: uri
          nullable: true
        results:
          type: array
          items:
            $ref: '#/components/schemas/AdminStaff'
      required:
      - count
      - next
      - previous
      - results
    PasswordResetRequest:
      type: object
      properties:
        email:
          type: string
          format: email
        redirect_uri:
          type: string
      required:
      - email
      - redirect_uri
    PatchedAdminStaffUpdate:
      type: object
      properties:
        first_name:
          type: string
          maxLength: 30
        last_name:
          type: string
          maxLength: 30
        is_active:
          type: boolean
          title: Active
    PatchedUserProfileUpdate:
      type: object
      properties:
        first_name:
          type: string
          maxLength: 30
        last_name:
          type: string
          maxLength: 30
    PhoneNumber:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        number:
          type: string
          title: Numéro de téléphone
          maxLength: 20
        type:
          $ref: '#/components/schemas/TypeEnum'
        created_by:
          allOf:
          - $ref: '#/components/schemas/CreatedBy'
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - created_by
      - id
      - number
      - updated_at
    PhoneNumberCreateUpdate:
      type: object
      properties:
        number:
          type: string
          title: Numéro de téléphone
          maxLength: 20
        type:
          $ref: '#/components/schemas/TypeEnum'
      required:
      - number
      - type
    SetNewPassword:
      type: object
      properties:
        new_password:
          type: string
          writeOnly: true
        uid:
          type: string
          writeOnly: true
        token:
          type: string
          writeOnly: true
      required:
      - new_password
      - token
      - uid
    Setassword:
      type: object
      properties:
        new_password:
          type: string
          writeOnly: true
        uid:
          type: string
          writeOnly: true
        token:
          type: string
          writeOnly: true
      required:
      - new_password
      - token
      - uid
    TokenObtainPair:
      type: object
      properties:
        email:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
      required:
      - access
      - email
      - password
      - refresh
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
      required:
      - access
      - refresh
    TypeEnum:
      enum:
      - work
      - personal
      - fax
      type: string
      description: |-
        * `work` - Work
        * `personal` - Personal
        * `fax` - Fax
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        first_name:
          type: string
          maxLength: 30
        last_name:
          type: string
          maxLength: 30
        date_joined:
          type: string
          format: date-time
        is_active:
          type: boolean
          title: Active
      required:
      - email
      - id
    UserChangePassword:
      type: object
      properties:
        old_password:
          type: string
        new_password:
          type: string
      required:
      - new_password
      - old_password
    UserCreate:
      type: object
      properties:
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        first_name:
          type: string
          maxLength: 30
        last_name:
          type: string
          maxLength: 30
        is_active:
          type: boolean
          title: Active
        redirect_uri:
          type: string
          format: uri
          writeOnly: true
      required:
      - email
      - first_name
      - last_name
      - redirect_uri
    UserEmailChangeConfirm:
      type: object
      properties:
        token:
          type: string
      required:
      - token
    UserEmailChangeRequest:
      type: object
      properties:
        new_email:
          type: string
          format: email
        password:
          type: string
          writeOnly: true
        redirect_uri:
          type: string
          format: uri
      required:
      - new_email
      - password
      - redirect_uri
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
